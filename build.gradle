plugins {
    id 'org.springframework.boot' version '2.3.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.9.RELEASE'
    id 'com.moowork.node' version '1.3.1'
    id 'java'
    id 'war'
}

bootWar{
    archiveBaseName="ROOT"
}

node {
    version = '12.18.2'
    npmVersion = '6.14.5'
    workDir = file('./src/frontend')
    npmWorkDir = file('./src/frontend')
    nodeModulesDir = file('./src/frontend')
}

group = 'com'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-validation:2.3.6.RELEASE'

    implementation 'it.ozimov:embedded-redis:0.7.2'
//    implementation 'org.springframework.security.oauth.boot:spring-security-oauth2-autoconfigure:2.3.0.RELEASE'
    implementation 'io.jsonwebtoken:jjwt:0.9.1'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.0'
    implementation 'org.apache.tika:tika-parsers:1.24.1'
    implementation 'org.imgscalr:imgscalr-lib:4.2'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'mysql:mysql-connector-java'

    implementation 'org.mapstruct:mapstruct:1.3.1.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.3.1.Final"

    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    testImplementation 'org.springframework.security:spring-security-test'
}

task setUp(type: NpmTask) {
    description = 'Install Node package'
    args = ['install']
    inputs.files file('package.json')
    outputs.files file('node_modules')
}

task buildFrontEnd(type: NpmTask, dependsOn: setUp) {
    description = 'Build vue.js'
    args = ['run', 'build']
}

processResources.dependsOn 'buildFrontEnd'
